"""user_idをCognitoの仕様に合わせuuid4に変更する/request, loan idをuuidに変更する

Revision ID: cee056eb0afc
Revises: 
Create Date: 2024-05-09 13:57:00.297486

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cee056eb0afc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book_informations',
    sa.Column('book_information_id', sa.Integer(), nullable=False),
    sa.Column('isbn_number', sa.String(length=13), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('author', sa.String(length=255), nullable=False),
    sa.Column('published_date', sa.Date(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('image_path', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('book_information_id'),
    sa.UniqueConstraint('isbn_number')
    )
    op.create_table('users',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('nickname', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.String(length=36), nullable=True),
    sa.Column('is_delete', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('book_information_id', sa.Integer(), nullable=False),
    sa.Column('donation_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['book_information_id'], ['book_informations.book_information_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book_loans',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('rent_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('return_date', sa.Date(), nullable=True),
    sa.Column('is_held', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book_requests',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('requester_id', sa.String(length=36), nullable=False),
    sa.Column('holder_id', sa.String(length=36), nullable=False),
    sa.Column('request_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('requested', 'sending', 'arrived'), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['holder_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['requester_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('book_requests')
    op.drop_table('book_loans')
    op.drop_table('books')
    op.drop_table('users')
    op.drop_table('book_informations')
    # ### end Alembic commands ###
